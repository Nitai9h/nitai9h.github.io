<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker部署书签管理工具 - Shaarli与OneNav</title>
      <link href="//22331.html"/>
      <url>//22331.html</url>
      
        <content type="html"><![CDATA[<p>由于个人需要经常更换设备和浏览器，书签比较难同步，又有一些个人的备忘等比较重要</p><p>于某个晚上灵光乍现，想出此套方案，分享出来供他人参考</p><h3 id="方案说明"><a href="#方案说明" class="headerlink" title="方案说明"></a>方案说明</h3><p>本人使用Shaarli做备忘录<br>    使用OneNav做书签记录</p><h5 id="为什么使用docker部署"><a href="#为什么使用docker部署" class="headerlink" title="为什么使用docker部署"></a>为什么使用docker部署</h5><p>使用docker部署在网络上可以解决跨设备、跨平台、跨浏览器之间同步和访问限制</p><h6 id="Shaarli说明"><a href="#Shaarli说明" class="headerlink" title="Shaarli说明"></a>Shaarli说明</h6><p>Shaarli适用于以下场景：</p><ul><li><p>管理与分享书签</p></li><li><p>团队成员共享链接和资源</p></li><li><p>记录和分享想法、文章和笔记</p></li><li><p>保存和分类学习资料和代码片段</p></li><li><p>收集和组织感兴趣的音乐、视频等</p></li></ul><p><em>使用Shaarli作为书签管理工具比较杂乱，不便于展示，故我仅使用Shaarli作为个人知识库</em></p><h6 id="OneNav说明"><a href="#OneNav说明" class="headerlink" title="OneNav说明"></a>OneNav说明</h6><p>与Shaarli相比OneNav的使用局限性就大了</p><p>仅可帮助你将浏览器书签进行集中统一管理</p><p>但这也使得OneNav成为了一个纯粹的书签管理工具</p><h2 id="安装Shaarli"><a href="#安装Shaarli" class="headerlink" title="安装Shaarli"></a>安装Shaarli</h2><p>此处仅展示docker run方式部署</p><p>你可以<a href="https://shaarli.readthedocs.io/en/master/Docker.html">点击此处查阅官方文档</a>来查看docker compose安装方式</p><h4 id="这里我使用docker-run方式部署"><a href="#这里我使用docker-run方式部署" class="headerlink" title="这里我使用docker run方式部署"></a>这里我使用docker run方式部署</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach \</span><br><span class="line">           --name myshaarli \</span><br><span class="line">           --publish 8000:80 \</span><br><span class="line">           --rm \</span><br><span class="line">           --volume /etc/dokcer/shaarli/data:/var/www/shaarli/data \</span><br><span class="line">           --volume /etc/dokcer/shaarli/cache:/var/www/shaarli/cache \</span><br><span class="line">           ghcr.io/shaarli/shaarli:latest</span><br></pre></td></tr></table></figure><p>其中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">8000为Shaarli容器的访问端口</span><br><span class="line">/etc/dokcer/shaarli/data为Shaarli数据存放目录</span><br><span class="line">/etc/dokcer/shaarli/cache为Shaarli缓存存放目录</span><br></pre></td></tr></table></figure><p>此外你还需要：</p><p>替换<code>/etc/dokcer/shaarli/data</code>为你的Shaarli<code>数据</code>存放目录</p><p>替换<code>/etc/dokcer/shaarli/cache</code>为你的Shaarli<code>缓存</code>存放目录</p><p>在执行docker run前创建Shaarli<code>数据</code>与<code>缓存</code>文件夹</p><p>在创建完文件夹后手动使用<code>chmod 777 /etc/dokcer/shaarli/data</code>与<code>chmod 777 /etc/dokcer/shaarli/cache</code>来为Shaarli提供文件访问权限</p><h2 id="安装OneNav"><a href="#安装OneNav" class="headerlink" title="安装OneNav"></a>安装OneNav</h2><p>此处仅展示docker run方式部署</p><p>你可以<a href="https://doc.xiaoz.org/books/onenav/page/a1d0c#bkmrk-docker%E5%AE%89%E8%A3%85">点击此处查阅官方文档</a>查看docker compose安装方式</p><h4 id="这里我使用docker-run方式部署-1"><a href="#这里我使用docker-run方式部署-1" class="headerlink" title="这里我使用docker run方式部署"></a>这里我使用docker run方式部署</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name=&quot;onenav&quot; -p 7000:80 \</span><br><span class="line">    -v /etc/dokcer/onenav/data:/data/wwwroot/default/data \</span><br><span class="line">    helloz/onenav</span><br></pre></td></tr></table></figure><p>其中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7000为OneNav容器的访问端口</span><br><span class="line">/etc/dokcer/onenav/data为OneNav数据存放目录</span><br></pre></td></tr></table></figure><p>此外你还需要：</p><p>替换<code>/etc/dokcer/onenav/data</code>为你的OneNav<code>数据</code>存放目录</p><p>在执行前创建OneNav<code>数据</code>文件夹</p><p>在创建完文件夹后手动使用<code>chmod 777 /etc/dokcer/onenav/data</code>来为OneNav提供文件访问权限</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
          <category> 书签管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Shaarli </tag>
            
            <tag> OneNav </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零成本搭建个人网站 - 安装Hexo、Anzhiyu主题</title>
      <link href="//22330.html"/>
      <url>//22330.html</url>
      
        <content type="html"><![CDATA[<h4 id="注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"><a href="#注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待" class="headerlink" title="注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"></a><code>注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待</code></h4><p>本文参考：&#96;</p><p><a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p><p><a href="https://docs.anheyu.com/initall.html">Anzhiyu主题官方文档</a></p><h3 id="关于-Hexo"><a href="#关于-Hexo" class="headerlink" title="关于 Hexo"></a>关于 Hexo</h3><p>Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p><p>安装 Hexo 只需几分钟。<br>如果您遇到问题，并且在<a href="https://hexo.io/zh-cn/docs/">官方文档内</a>找不到解决方案，请提交 GitHub 问题<a href="https://github.com/hexojs/hexo/issues">到Hexo官方仓库</a>，Hexo官方将提供帮助</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h5 id="依赖清单"><a href="#依赖清单" class="headerlink" title="依赖清单"></a>依赖清单</h5><ul><li><p>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p></li><li><p>Git</p></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！ 你可以跳过此步骤，直接安装 Hexo</p><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装</p><h5 id="Node-js-安装指示"><a href="#Node-js-安装指示" class="headerlink" title="Node.js 安装指示"></a>Node.js 安装指示</h5><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/zh-cn/download/">安装程序</a></p><p>其它的安装方法：</p><ul><li><p>Windows：通过 <a href="https://github.com/jasongin/nvs/">nvs</a>（推荐）或者 <a href="https://github.com/nvm-sh/nvm">nvm</a> 安装</p></li><li><p>Mac：使用 <a href="https://brew.sh/">Homebrew</a> 或 <a href="http://www.macports.org/">MacPorts</a> 安装</p></li><li><p>Linux（DEB&#x2F;RPM-based）：从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装</p></li><li><p>其它：使用相应的软件包管理器进行安装。 可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/">指导</a></p></li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题</p><p>注意事项：</p><ul><li><p>Windows<br>使用 Node.js 官方安装程序时，请确保勾选 Add to PATH 选项（默认已勾选）</p></li><li><p>Mac &#x2F; Linux<br>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 由 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">npmjs 发布的指导</a> 修复该问题</p></li><li><p>Linux<br>如果您使用 Snap 来安装 Node.js，在 <a href="https://hexo.io/zh-cn/docs/commands#init">初始化</a> 博客时您可能需要手动在目标文件夹中执行 <code>npm install</code></p></li></ul><h5 id="Git-安装指示"><a href="#Git-安装指示" class="headerlink" title="Git 安装指示"></a>Git 安装指示</h5><p>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a><br>Mac：使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">官方安装程序</a><br>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code><br>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></p><p>注意事项：</p><p>Mac 用户<br>如果在编译时可能会遇到问题。 请先到 App Store 安装 Xcode。 Xcode 完成后，启动并进入 <code>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</code> 安装命令行工具。</p><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</p><p><code>建议在目录里新建一个文件夹在文件夹内执行安装命令</code><br><em>这里我的文件夹命名为 <code>Hexo</code>，下文的Hexo可能为文件夹名，注意甄别</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p><em>ps:如果你收到了以下提示：</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! code FETCH_ERROR</span><br><span class="line">npm ERR! errno FETCH_ERROR</span><br><span class="line">npm ERR! network <span class="built_in">timeout</span> at: https://registry.npmjs.org/hexo-cli</span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     /root/.npm/_logs/2024-07-19T09_45_53_339Z-debug-0.log</span><br></pre></td></tr></table></figure><p><em>请更换npm的软件源</em></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        一些国内npm源镜像    </div>    <div class='spoiler-content'>        <p>使用 <code>阿里云</code> 镜像源加速 NPM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://npm.aliyun.com</span><br></pre></td></tr></table></figure><p>使用 <code>腾讯云</code> 镜像源加速 NPM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://mirrors.cloud.tencent.com/npm/</span><br></pre></td></tr></table></figure><p>使用 <code>华为云</code> 镜像源加速 NPM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure><p>返回 <code>npm 官方</code> 原始镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><p>这里推荐使用 <code>华为云</code></p>    </div></div><p>切换完成后再次执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>等待安装成功即可</p><h4 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p><code>注意如果你执行完上一步操作后，打开Hexo文件夹发现内部是下图所示结构，请跳过cd blog，请继续往下执行</code></p><p><img src="https://pic.imgdb.cn/item/669a5eb2d9c307b7e912b02b.webp" alt="Pic01"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>出现以下提示时，即可访问本机<code>ip:4000</code>端口，就可以看到构建好的网站了</p><p>或者你也可以直接 <code>Ctrl+鼠标左键链接</code> 访问到网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>但此时网站并不完善</p><p><code>Ctrl+C</code>关闭端口结束展示</p><h4 id="安装以后，可以使用以下两种方式执行-Hexo："><a href="#安装以后，可以使用以下两种方式执行-Hexo：" class="headerlink" title="安装以后，可以使用以下两种方式执行 Hexo："></a>安装以后，可以使用以下两种方式执行 Hexo：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><p>Linux 用户可以将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure><h1 id="安装主题，丰富元素"><a href="#安装主题，丰富元素" class="headerlink" title="安装主题，丰富元素"></a>安装主题，丰富元素</h1><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>这里使用的是 Anzhiyu主题，你可以查看 <a href="https://docs.anheyu.com/intro.html">Anzhiyu主题官方安装文档</a></p><p><code>_config.anzhiyu.yml</code>中的配置优先级大于<code>_config.yml</code>，所以更新主题后需要比对主题文件夹中的<code>theme/anzhiyu/_config.yml</code> 文件内容，一般在 <a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release</a> 的说明里会特别提示或给出配置文件版本对比diff，同步修改原配置文件即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">致主题的新用户：</span><br><span class="line"></span><br><span class="line">- 本指南经过数个版本打磨，绝大部分的功能都有详细说明，请仔细阅读，节约自己和他人的时间；</span><br><span class="line"></span><br><span class="line">- 本指南中提到的：&quot;站点配置&quot; 指的 Hexo 博客目录下的 _config.yml，&quot;主题配置&quot; 指的是 theme/anzhiyu/_config.yml 或者 _config.anzhiyu.yml ，注意区分；</span><br><span class="line"></span><br><span class="line">- 本指南中提到的 source 目录都指的是博客目录下的 source 文件夹，不推荐修改主题内 source 目录；</span><br><span class="line"></span><br><span class="line">- 每次无论 hexo g 或 hexo s，都最好先使用 hexo clean 清除本地缓存；</span><br><span class="line"></span><br><span class="line">- 页面结果以本地 hexo s 为准，部署后的异常大部分是线上缓存原因，在确认没有报错的情况下，等待若干时间后即可正常；</span><br><span class="line"></span><br><span class="line">- 由于主题的不同版本会存在配置差异，本指南以最新版本为准。</span><br><span class="line"></span><br><span class="line">- 本指南不包括所有的配置说明，几乎每个配置在主题配置中都有注释，可配合指南共同参考使用。</span><br><span class="line"></span><br><span class="line">- 另外本指南仅包含主题范围内的使用说明，如果是 Hexo 的使用或者 Hexo 插件的使用，请查阅各自的文档。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>ps:以上内容来自 <a href="https://docs.anheyu.com/intro.html">Anzhiyu主题指南</a></em></p><h3 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装:"></a>主题安装:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">温馨提示：</span><br><span class="line">Anzhiyu主题拥有Main(稳定版)和Dev(测试版)两种版本, 我们推荐您安装使用Github(稳定版)以获得最佳的主题体验</span><br></pre></td></tr></table></figure><ul><li>方式一(Github 推荐):</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>如遇安装不上可以使用以下url代理安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://ghproxy.com/https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><ul><li>方式二(Release 推荐):</li></ul><p>下载 最新 <a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/releases">release 版本</a> 解压到 <code>themes</code> 目录，并将解压出的文件夹重命名为 <code>anzhiyu</code></p><ul><li>方式三(npm安装 不建议):</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-anzhiyu</span><br></pre></td></tr></table></figure><p>此方法只支持 Hexo 5.0.0 以上版本 通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成</p><p>测试版Dev</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>测试版可能存在 bug，追求稳定的请安装稳定版</p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>打开 Hexo 根目录下的 <code>config.yml</code>, 找到以下配置项，把主题改为<code>anzhiyu</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><h3 id="【必须】安装-pug-和-stylus-渲染插件"><a href="#【必须】安装-pug-和-stylus-渲染插件" class="headerlink" title="【必须】安装 pug 和 stylus 渲染插件"></a>【必须】安装 pug 和 stylus 渲染插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save --registry=http://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>无法安装可以使用cnpm进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus --save --registry=http://registry.npmmirror.com</span><br></pre></td></tr></table></figure><h3 id="覆盖配置"><a href="#覆盖配置" class="headerlink" title="覆盖配置"></a>覆盖配置</h3><p>覆盖配置可以使<code>主题配置</code>放置在 anzhiyu 目录之外，避免在更新主题时丢失自定义的配置。</p><p>通过 Npm 安装主题的用户可忽略，其他用户建议学习使用。</p><ul><li>macos&#x2F;linux 在博客根目录运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> -rf ./themes/anzhiyu/_config.yml ./_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><ul><li>windows 复制<code>/themes/anzhiyu/_config.yml</code>此文件到 hexo 根目录，并重命名为<code>_config.anzhiyu.yml</code><br>以后如果修改任何主题配置，都只需修改 _config.anzhiyu.yml 的配置即可。</li></ul><p>注意：</p><ul><li>只要存在于 <code>_config.anzhiyu.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.anzhiyu.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的</li></ul><h3 id="本地启动-hexo"><a href="#本地启动-hexo" class="headerlink" title="本地启动 hexo"></a>本地启动 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>访问本机<code>ip:4000</code>端口，就可以看到构建好的网站了</p><p>可以看到网站已经把主题换成了Anzhiyu</p><p>但是还是不完善</p><p><a href="https://docs.anheyu.com/intro.html">点击此处访问Anzhiyu主题官方文档继续构建完整网站</a></p><h1 id="发布你的网站到互联网："><a href="#发布你的网站到互联网：" class="headerlink" title="发布你的网站到互联网："></a>发布你的网站到互联网：</h1><p><a href="https://nitai.us.kg/22332">点击查看文章</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Linux(Debian) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Anzhiyu主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N1 armbian dtb低负载详细编译教程</title>
      <link href="//22328.html"/>
      <url>//22328.html</url>
      
        <content type="html"><![CDATA[<h4 id="注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"><a href="#注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待" class="headerlink" title="注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"></a><code>注意：本篇文章包含1张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待</code></h4><h3 id="文章来自恩山无线论坛sleikang大佬"><a href="#文章来自恩山无线论坛sleikang大佬" class="headerlink" title="文章来自恩山无线论坛sleikang大佬"></a>文章来自恩山无线论坛sleikang大佬</h3><h4 id="原文链接（https-www-right-com-cn-forum-thread-2841496-1-1-html）"><a href="#原文链接（https-www-right-com-cn-forum-thread-2841496-1-1-html）" class="headerlink" title="原文链接（https://www.right.com.cn/forum/thread-2841496-1-1.html）"></a><a href="https://www.right.com.cn/forum/thread-2841496-1-1.html">原文链接（https://www.right.com.cn/forum/thread-2841496-1-1.html）</a></h4><hr><h5 id="1-首先要进入armbian系统-自己用其他系统可能会缺失编译环境"><a href="#1-首先要进入armbian系统-自己用其他系统可能会缺失编译环境" class="headerlink" title="1. 首先要进入armbian系统 自己用其他系统可能会缺失编译环境"></a>1. 首先要进入armbian系统 自己用其他系统可能会缺失编译环境</h5><p>然后把dtb反编译到root目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtc -I dtb -O dts -o n1.dts /boot/dtb/amlogic/meson-gxl-s905d-phicomm-n1.dtb</span><br></pre></td></tr></table></figure><h5 id="2-然后找到类似图中的位置，-后面的十六进制不是固定的"><a href="#2-然后找到类似图中的位置，-后面的十六进制不是固定的" class="headerlink" title="2. 然后找到类似图中的位置，&#x3D;后面的十六进制不是固定的"></a>2. 然后找到类似图中的位置，&#x3D;后面的十六进制不是固定的</h5><p><img src="https://pic.imgdb.cn/item/6698d354d9c307b7e981cec4.webp" alt="Pic01"></p><h5 id="3-修改后保存-编译-得到n1-dtb"><a href="#3-修改后保存-编译-得到n1-dtb" class="headerlink" title="3.修改后保存 编译 得到n1.dtb"></a>3.修改后保存 编译 得到n1.dtb</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtc -I dts -O dtb -o n1.dtb n1.dts</span><br></pre></td></tr></table></figure><p>然后放进&#x2F;boot&#x2F;dtb&#x2F;amlogic&#x2F; 自己修改boot&#x2F;uEnv文件调用这个就行</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> N1 </tag>
            
            <tag> Armbian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐讯N1盒子-降级并刷入Armbian</title>
      <link href="//22327.html"/>
      <url>//22327.html</url>
      
        <content type="html"><![CDATA[<h4 id="注意：本篇文章包含6张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"><a href="#注意：本篇文章包含6张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待" class="headerlink" title="注意：本篇文章包含6张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"></a><code>注意：本篇文章包含6张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待</code></h4><h4 id="本文是斐讯N1盒子降级与刷机的一篇全过程指导书"><a href="#本文是斐讯N1盒子降级与刷机的一篇全过程指导书" class="headerlink" title="本文是斐讯N1盒子降级与刷机的一篇全过程指导书"></a>本文是斐讯N1盒子降级与刷机的一篇<strong>全过程指导书</strong></h4><p>因个人需求，由玩客云转向N1盒子，不做过多阐述</p><p>本文主要由两部分组成：<strong>降级</strong>、<strong>刷Armbian</strong></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、降级"><a href="#一、降级" class="headerlink" title="一、降级"></a>一、降级</h2><h5 id="1-安装Amlogic-USB-Burning-Tool-v2-1-6-8烧录程序"><a href="#1-安装Amlogic-USB-Burning-Tool-v2-1-6-8烧录程序" class="headerlink" title="1.安装Amlogic USB Burning Tool_v2.1.6.8烧录程序"></a>1.安装Amlogic USB Burning Tool_v2.1.6.8烧录程序</h5><p>需要此软件提供驱动</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:Amlogic USB Burning Tool    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-C6Dtd.html">https://www.123pan.com/s/3l4rVv-C6Dtd.html</a></p><p>提取码: <code>b6Iy</code></p>    </div></div><h5 id="2-打开盒子的ADB功能"><a href="#2-打开盒子的ADB功能" class="headerlink" title="2.打开盒子的ADB功能"></a>2.打开盒子的ADB功能</h5><p>盒子插电开机，插上鼠标、网线</p><p>HDMI线连接支持HDMI的显示器或者电视</p><p>USB公对公线连接N1和电脑主机</p><p>进入主页后，用鼠标左键单击四下<code>固件版本</code>即可开启ADB</p><p><img src="https://pic.imgdb.cn/item/6698d259d9c307b7e9809f91.webp" alt="Pic01"></p><p>这里顺便看一下版本号</p><p>如果 <code>2.2</code>以下就不用了</p><p>再记一下IP地址，后面会用到</p><h5 id="3-解压使用N1-T1降刷机助手v1-1"><a href="#3-解压使用N1-T1降刷机助手v1-1" class="headerlink" title="3.解压使用N1-T1降刷机助手v1.1"></a>3.解压使用N1-T1降刷机助手v1.1</h5><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:N1-T1降刷机助手v1.1    </div>    <div class='spoiler-content'>        <p><code>注意：可能会提示存在病毒风险，请放心使用；介意请自行搜索资源下载</code></p><p><code>注意：软件内打赏为该软件作者的收款码，建议根据自身实际经济情况进行打赏(可以不打)</code></p><p><a href="https://www.123pan.com/s/3l4rVv-O6Dtd.html">https://www.123pan.com/s/3l4rVv-O6Dtd.html</a></p><p>提取码: <code>6G6o</code></p>    </div></div><p>选择需要降级的设备名然后输入设备IP地址</p><p><img src="https://pic.imgdb.cn/item/6698d259d9c307b7e9809fad.webp" alt="Pic02"></p><p><code>注意：盒子需要打开adb模式才能降级，否则会一直提示连接超时</code></p><h5 id="4-开始降级"><a href="#4-开始降级" class="headerlink" title="4.开始降级"></a>4.开始降级</h5><p><code>注意：N1盒子只需要进行一次降级，后续不管怎么样都不需要再进行降级操作</code></p><p><code>注意：此工具降级时不需要将adb.exe等文件放到系统文件夹下，降级工具使用的是绝对路径；也就是您不需要做任何操作，仅需要解压软件后直接使用即可。</code></p><p>降级完成后</p><p>盒子断电关机，拔下鼠标、网线</p><p>拔下HDMI线</p><p>拔下USB公对公线</p><h3 id="二、制作系统U盘"><a href="#二、制作系统U盘" class="headerlink" title="二、制作系统U盘"></a>二、制作系统U盘</h3><h5 id="先下载文件：Armbian-img镜像、balenaEtcher、DiskGenius"><a href="#先下载文件：Armbian-img镜像、balenaEtcher、DiskGenius" class="headerlink" title="先下载文件：Armbian img镜像、balenaEtcher、DiskGenius"></a>先下载文件：<strong>Armbian img镜像</strong>、<strong>balenaEtcher</strong>、<strong>DiskGenius</strong></h5><p>我提供的是我现在使用的版本：<code>24.5.0(debian)</code></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:Armbian24.5.0(debian)    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-D6Dtd.html">https://www.123pan.com/s/3l4rVv-D6Dtd.html</a></p><p>提取码:<code>fdum</code></p>    </div></div><h5 id="下载完成后解压"><a href="#下载完成后解压" class="headerlink" title="下载完成后解压"></a>下载完成后解压</h5><p>得到文件(后缀为img)</p><ul><li>自行校验SHA256</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">780f5a7cd0785ac95af04c971d6e8c745e7b068b1db12a646aada44cc9e3ca7d</span><br></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:U盘写入工具-balenaEtcher    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-r6Dtd.html">https://www.123pan.com/s/3l4rVv-r6Dtd.html</a></p><p>提取码:<code>AVEB</code></p>    </div></div><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:U盘分区工具-DiskGenius    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-86Dtd.html">https://www.123pan.com/s/3l4rVv-86Dtd.html</a></p><p>提取码:<code>bPt5</code></p>    </div></div><h5 id="将一个-8G以上的U盘插入电脑"><a href="#将一个-8G以上的U盘插入电脑" class="headerlink" title="将一个 8G以上的U盘插入电脑"></a>将一个 <code>8G以上的U盘</code>插入电脑</h5><h5 id="打开DiskGenius"><a href="#打开DiskGenius" class="headerlink" title="打开DiskGenius"></a>打开DiskGenius</h5><p>右键你的U盘</p><p><img src="https://pic.imgdb.cn/item/6698d259d9c307b7e9809fbf.webp" alt="Pic03"></p><p>然后点击清空分区</p><p><code>注意：接下来的操作会清空你U盘内的数据,记得做好备份；无视此条注意事项后果自负</code></p><p><code>注意：接下来的操作会清空你U盘内的数据,记得做好备份；无视此条注意事项后果自负</code></p><p><code>注意：接下来的操作会清空你U盘内的数据,记得做好备份；无视此条注意事项后果自负</code></p><p>再点左上角保存</p><p>关闭DiskGenius</p><h5 id="安装与使用balenaEtcher"><a href="#安装与使用balenaEtcher" class="headerlink" title="安装与使用balenaEtcher"></a>安装与使用balenaEtcher</h5><p>安装完成后打开</p><p><img src="https://pic.imgdb.cn/item/6698d259d9c307b7e9809fd3.webp" alt="Pic04"></p><p>点击从文件烧录</p><p>在弹出的文件选择框中找到制作U盘前下载并解压好的Armbian img镜像文件</p><p>然后点击选择目标磁盘</p><p><code>注意：别选错U盘了</code></p><p>再点击写入</p><p>等待一会儿即可烧录成功</p><p>关闭balenaEtcher</p><h5 id="使用DiskGenius修改dts文件"><a href="#使用DiskGenius修改dts文件" class="headerlink" title="使用DiskGenius修改dts文件"></a>使用DiskGenius修改dts文件</h5><p><code>下载我修改的dts文件</code>（修正N1盒子使用负载高的问题）</p><p>或<a href="http://nitai.us.kg/22328">自行参照我博客内的教程进行修改</a></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:dtb-meson-gxl-s905d-phicomm-n1-nitai.dtb    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-K6Dtd.html">https://www.123pan.com/s/3l4rVv-K6Dtd.html</a></p><p>提取码：<code>VrbE</code></p>    </div></div><p>打开DiskGenius</p><p>选择U盘</p><p>把dts文件放进 <code>/boot/dtb/amlogic/</code></p><p>然后找到 <code>boot/uEnv.ini</code></p><p>修改最上面那一行的引用，把它改成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtb_name=/dtb/amlogic/dtb-meson-gxl-s905d-phicomm-n1-nitai.dtb</span><br></pre></td></tr></table></figure><p>然后保存</p><p>拔下U盘</p><h3 id="三、刷机"><a href="#三、刷机" class="headerlink" title="三、刷机"></a>三、刷机</h3><p>把刚才烧录好的U盘插到N1盒子上靠近HDMI接口的USB接口</p><p>插入电源</p><p>插入连接路由器的网线</p><p>稍后盒子会自动使用刷机U盘进行刷机工作</p><p>需要等待几分钟左右</p><h5 id="下载我提供的-MobaXterm-SSH-远程登录工具或自行下载"><a href="#下载我提供的-MobaXterm-SSH-远程登录工具或自行下载" class="headerlink" title="下载我提供的 MobaXterm SSH 远程登录工具或自行下载"></a>下载我提供的 MobaXterm SSH 远程登录工具或自行下载</h5><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:MobaXterm_v22.1    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-06Dtd.html">https://www.123pan.com/s/3l4rVv-06Dtd.html</a></p><p>提取码：<code>De8B</code></p>    </div></div><h5 id="登录路由器管理后台"><a href="#登录路由器管理后台" class="headerlink" title="登录路由器管理后台"></a>登录路由器管理后台</h5><p>(各路由器管理系统不同，具体进入方法请自行百度)</p><p>查找 Armbian 设备的 ip 地址</p><p><img src="https://pic.imgdb.cn/item/6698d20bd9c307b7e980426a.webp" alt="Pic05"></p><h5 id="运行-MobaXterm-SSH-远程登录工具，按照图示填"><a href="#运行-MobaXterm-SSH-远程登录工具，按照图示填" class="headerlink" title="运行 MobaXterm SSH 远程登录工具，按照图示填"></a>运行 MobaXterm SSH 远程登录工具，按照图示填</h5><p><img src="https://pic.imgdb.cn/item/6698d20bd9c307b7e980428d.webp" alt="Pic06"></p><p>回车，等待一会</p><p>然后软件会要求你输入密码</p><p>这里的密码默认为 <code>1234</code></p><p>(注意：输入密码不会显示，输完就行了)</p><p>然后回车就能进入 Armbian 系统了</p><p>首次进入会提示你更改默认登录密码</p><p>输入新密码后回车，会让你再次输入一遍以确认密码</p><p>然后会询问你是否创建一个新用户</p><p>这里直接 <code>Ctrl+C</code> 跳过就行了</p><p>然后点击上面的窗口，关闭窗口后</p><p>双击左侧标签，重新打开</p><p>输入你修改好的密码，登录</p><h3 id="五、镜像写入eMMC"><a href="#五、镜像写入eMMC" class="headerlink" title="五、镜像写入eMMC"></a>五、镜像写入eMMC</h3><p><code>注意：因为N1盒子容量较小，不符合我的要求，所以我选择直接使用U盘作为系统盘，因此我不需要将镜像写入eMMC；如果你也想将U盘作为系统盘，请直接跳过此步</code></p><p><em>ps:个人认为U盘体积小，散热困难，写入速度受到极大影响，故我使用的是硬盘作为系统盘</em></p><p>如果你还是决定直接使用N1</p><p>请使用以下写入方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nand–sata-install</span><br></pre></td></tr></table></figure><p>出现 <code>Complete copy OS to eMMC</code>，就代表写入完成了</p><p>完成后，输入命令关机，或者拔电源也行</p><p><code>注意：如果你想重刷另一个Armbian系统，那么还是使用相同的步骤，但不需要使用降级步骤；直接将镜像写入U盘，再用U盘启动Armbian，重新执行nand-sata-install即可完整覆盖掉emmc中的数据，不必重刷安卓再刷Armbian</code></p><h3 id="六、针对Armbian的优化"><a href="#六、针对Armbian的优化" class="headerlink" title="六、针对Armbian的优化"></a>六、针对Armbian的优化</h3><h5 id="1-优化apt源服务器"><a href="#1-优化apt源服务器" class="headerlink" title="1.优化apt源服务器"></a>1.优化apt源服务器</h5><p><em>ps:个人认为没必要优化apt源，我优化完了反而没法连接apt源了；如果你非要进行apt源优化，那么我建议你先备份apt源文件</em></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:WinSCP安装包    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-U6Dtd.html">https://www.123pan.com/s/3l4rVv-U6Dtd.html</a></p><p>提取码:<code>c916</code></p>    </div></div><p>用<code>WinSCP</code>连接到你的服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">主机名填armbian的ip地址</span><br><span class="line">端口22不用改</span><br><span class="line">用户名：root</span><br><span class="line">密码：你自己修改后的密码</span><br></pre></td></tr></table></figure><p>然后点击链接</p><p>当出现：<code>继续连接未知服务器，并将其主机密钥添加到缓存中吗?</code>时</p><p>直接点击 <code>是</code>即可</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        备份apt源    </div>    <div class='spoiler-content'>        <p>找到：</p><p><code>/etc/apt/sources.list</code></p><p>复制一份文件</p><p>重命名为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sources.list.backup</span><br></pre></td></tr></table></figure>    </div></div><div class='spoiler collapsed'>    <div class='spoiler-title'>        修改apt源 (清华大学源)    </div>    <div class='spoiler-content'>        <p>推荐先 <code>备份apt源</code></p><p>找到：</p><p>&#x2F;etc&#x2F;apt&#x2F;sources.list</p><p>将文件内容替换成以下内容 (仅适用 Debian )</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">deb [ arch=arm64,armhf ] https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free</span><br><span class="line">deb [ arch=arm64,armhf ] https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main contrib non-free</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main contrib non-free</span><br><span class="line">deb [ arch=arm64,armhf ] https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main contrib non-free</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main contrib non-free</span><br><span class="line">deb [ arch=arm64,armhf ] https://mirrors.tuna.tsinghua.edu.cn/debian-security/ stretch/updates main contrib non-free</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security/ stretch/updates main contrib non-free</span><br><span class="line">#deb [ arch=arm64,armhf ] https://mirrors.tuna.tsinghua.edu.cn/debian/ sid main contrib non-free</span><br></pre></td></tr></table></figure><p>如果你使用的是 Ubuntu ，将文件内容替换成以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>    </div></div><p>修改完成后</p><p>直接执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><h5 id="2-设置时区为北京时间"><a href="#2-设置时区为北京时间" class="headerlink" title="2.设置时区为北京时间"></a>2.设置时区为北京时间</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone</span><br></pre></td></tr></table></figure><h5 id="3-网络配置（该部分的关闭默认DNS来源于-Luminous）"><a href="#3-网络配置（该部分的关闭默认DNS来源于-Luminous）" class="headerlink" title="3.网络配置（该部分的关闭默认DNS来源于@Luminous）"></a>3.网络配置（该部分的关闭默认DNS来源于@Luminous）</h5><p>首先关闭N1盒子的默认DNS，让它跟随路由分配</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /etc/resolvconf/resolv.conf.d/head &amp;&amp; <span class="built_in">touch</span> /etc/resolvconf/resolv.conf.d/head</span><br></pre></td></tr></table></figure><p>使用MobaXterm SSH 远程登录工具</p><p>在ssh连接后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmtui</span><br></pre></td></tr></table></figure><p><em>ps：即使是使用无线连接WiFi，也不建议拔下网线，因为N1的无线穿透能力并不强</em><br><em>因为我家有2个路由器，不同运营商，没做mash组网（一个网稳定但质量差；一个网质量好但不稳定）</em><br><em>所以我的方案是用网线链接稳定的网，用无线模块链接质量好的网，这样在我固定了MAC之后，我就可以使用家里的任意一网访问我的N1盒子</em></p><p>按键盘上的选择第二个Activate a connection，按提示选择并输入密码即可</p><h5 id="4-固定MAC地址（建议链接网络后再固定）"><a href="#4-固定MAC地址（建议链接网络后再固定）" class="headerlink" title="4.固定MAC地址（建议链接网络后再固定）"></a>4.固定MAC地址（建议链接网络后再固定）</h5><p>首先我们用以下指令查看系统当前的MAC并记录下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>如果报错多半是因为没有<code>net-tool</code>包</p><p>此时使用以下命令安装<code>net-tool</code>包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install net-tools</span><br></pre></td></tr></table></figure><p>这个时候再使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>如果还是存在问题，请自行查找互联网解决</p><p>得到设备MAC后</p><p>用winscp编辑以下文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etc/network/interfaces</span><br></pre></td></tr></table></figure><p>在iface eth0 inet dhcp下添加一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pre-up ifconfig eth0 hw ether 1A:2B:3C:4D:5E:6F</span><br></pre></td></tr></table></figure><p>将其中的<code>1A:2B:3C:4D:5E:6F</code>替换为你之前保存的MAC信息</p><p>保存文件</p><p>重启N1后MAC即固定为此值</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> N1 </tag>
            
            <tag> Armbian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建轻NAS：玩客云-刷入Armbian安装CasaOS</title>
      <link href="//22326.html"/>
      <url>//22326.html</url>
      
        <content type="html"><![CDATA[<h4 id="注意：本篇文章包含11张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"><a href="#注意：本篇文章包含11张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待" class="headerlink" title="注意：本篇文章包含11张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待"></a><code>注意：本篇文章包含11张图片，请耐心等待图片加载；当无任何反应时请刷新界面后再次等待</code></h4><div class='spoiler collapsed'>    <div class='spoiler-title'>        前言    </div>    <div class='spoiler-content'>        <h4 id="最近买了台矿渣，准备刷-Armbian-拿来当轻-NAS-用，于是这篇图文就出现了"><a href="#最近买了台矿渣，准备刷-Armbian-拿来当轻-NAS-用，于是这篇图文就出现了" class="headerlink" title="最近买了台矿渣，准备刷 Armbian 拿来当轻 NAS 用，于是这篇图文就出现了"></a>最近买了台矿渣，准备刷 Armbian 拿来当轻 NAS 用，于是这篇图文就出现了</h4><p>截至到目前我购置物品的价格：(均为某多价)<br>玩客云 (裸机)- <code>28</code> 元<br>电源 (12V 1.5A)- <code>8.88</code> 元<br>网线 (绿联千兆)- <code>6.9</code> 元<br>(玩客云的 LAN 口支持千兆，使用千兆网线可提升使用体验)<br>UPS 电源 - <code>25.24</code> 元<br>USB 公对公数据线 - <code>5.84</code> 元<br>(这条 USB 公对公数据线只要使用一次，所以看个人情况购买，正文有自制简易的 USB 公对公数据线的教程)</p><p><code>另外：需要自己去买移动硬盘或者机械硬盘加硬盘盒</code></p><p>(USB2.0 就够了，因为玩客云两个 USB 接口都是 2.0 的)</p><p>如果你打算入手玩客云那么你最好只买裸机，我在商家那买的网线和电源线质量很差，我买来没几天那电源线就没用了，迫不得已又去买新的电源线，然后没过几天网线又坏了，就又去买了新的网线。而且网线和电源线最好买个好点的。</p>    </div></div><h1 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h1><h2 id="一、给玩客云刷入-Armbian-固件"><a href="#一、给玩客云刷入-Armbian-固件" class="headerlink" title="一、给玩客云刷入 Armbian 固件"></a>一、给玩客云刷入 Armbian 固件</h2><h3 id="1、下载-hz-大佬提供的-Armbian-底层包"><a href="#1、下载-hz-大佬提供的-Armbian-底层包" class="headerlink" title="1、下载 hz 大佬提供的 Armbian 底层包"></a>1、下载 hz 大佬提供的 Armbian 底层包</h3><p>注意：现阶段 CasaOS 还无法支持最新版的底层包，所以我们需要下载之前的老版本</p><p>从 release 页面往下拉，找到 Armbian_23.05.0-trunk_Onecloud_bullseye_current_6.1.23_minimal.burn.img.xz</p><p>(minimal 代表最小底层包 burn 是线刷底层包)</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        在github下载    </div>    <div class='spoiler-content'>        <p><a href="https://github.com/hzyitc/armbian-onecloud/releases">https://github.com/hzyitc/armbian-onecloud/releases</a></p>    </div></div><p>如果你嫌下载太慢你也可以直接下载我分享的已经下载好的底层包</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        123网盘:玩客云Armbian    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-sHRtd.html">https://www.123pan.com/s/3l4rVv-sHRtd.html</a><br>提取码：<code>Cr7u</code></p>    </div></div><p>下载完成后解压.xz 得到后缀为 img 的固件包</p><ul><li>自行校验 SHA256 (hz 大佬提供):<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">46646c7cd04fe4b12204fcdd2dd75e7c82815dbcf0d98df0c39686bc9e67bf49</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、刷前注意"><a href="#2、刷前注意" class="headerlink" title="2、刷前注意"></a>2、刷前注意</h3><p>有消息说晶晨烧录工具会挑电脑</p><p>我的电脑 4 分多钟就刷好了</p><p>如果你的电脑刷的时间超过了很长时间</p><p>那么你就应该考虑换一台电脑重刷</p><h3 id="3、准备一根-USB-公对公数据线"><a href="#3、准备一根-USB-公对公数据线" class="headerlink" title="3、准备一根 USB 公对公数据线"></a>3、准备一根 USB 公对公数据线</h3><p>这条数据线仅需使用一次</p><p>如果你有这方面的需要，那么你可以购置一根</p><p>建议最好还是买一根，以备后用</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        自制USB双公头数据线    </div>    <div class='spoiler-content'>        <p>来自 B 站 UP 主：<code>coolcolder</code></p><p><a href="https://www.bilibili.com/video/BV15u4y1f739">https://www.bilibili.com/video/BV15u4y1f739</a></p>    </div></div><h3 id="4、安装晶晨烧录工具"><a href="#4、安装晶晨烧录工具" class="headerlink" title="4、安装晶晨烧录工具"></a>4、安装晶晨烧录工具</h3><p>下载我分享的.zip 压缩包或自行下载</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:晶晨烧录工具    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-TARtd.html">https://www.123pan.com/s/3l4rVv-TARtd.html</a></p><p>提取码：<code>uOaj</code></p>    </div></div><p>下载后将压缩包里的所有文件放到一个临时文件夹里</p><p>双击 <code>Amlogic USB Burning Tool v3.1.0.exe</code> 安装到合适的位置</p><h3 id="5、烧录固件"><a href="#5、烧录固件" class="headerlink" title="5、烧录固件"></a>5、烧录固件</h3><p>打开晶晨烧录工具</p><p>左上角选择文件 &#x3D;&gt; 导入烧录包</p><p><img src="https://pic.imgdb.cn/item/6698d159d9c307b7e97f77e7.webp" alt="Pic01"></p><p>在弹出的窗口中选择你在第一步中下载的 Armbian 底层包 [注意：底层包后缀为 img]</p><p>右侧的烧录配置选择全部擦除，其它默认</p><p><img src="https://pic.imgdb.cn/item/6698d159d9c307b7e97f77f8.webp" alt="Pic02"></p><p>直接点击开始</p><p>(这时候必须点击开始，工具并不会马上开始，而是会在检测到连接成功后才会开始)</p><h3 id="6、这里提供两种线刷方式-第一次刷仅可以使用方法一"><a href="#6、这里提供两种线刷方式-第一次刷仅可以使用方法一" class="headerlink" title="6、这里提供两种线刷方式 (第一次刷仅可以使用方法一)"></a>6、这里提供两种线刷方式 (第一次刷仅可以使用方法一)</h3><h4 id="第一种：拆机线刷"><a href="#第一种：拆机线刷" class="headerlink" title="第一种：拆机线刷"></a>第一种：拆机线刷</h4><h5 id="1-用吹风机吹热玩客云背板上的胶"><a href="#1-用吹风机吹热玩客云背板上的胶" class="headerlink" title="(1) 用吹风机吹热玩客云背板上的胶"></a>(1) 用吹风机吹热玩客云背板上的胶</h5><h5 id="2-用拆机片-可以其它东西代替-从-SD-卡槽的位置拆开背板"><a href="#2-用拆机片-可以其它东西代替-从-SD-卡槽的位置拆开背板" class="headerlink" title="(2) 用拆机片 (可以其它东西代替) 从 SD 卡槽的位置拆开背板"></a>(2) 用拆机片 (可以其它东西代替) 从 SD 卡槽的位置拆开背板</h5><p><img src="https://pic.imgdb.cn/item/6698d159d9c307b7e97f781a.webp" alt="Pic03-图片截自Bilibili @在下莫老师"></p><h5 id="3-卸下螺丝，抽出主板"><a href="#3-卸下螺丝，抽出主板" class="headerlink" title="(3) 卸下螺丝，抽出主板"></a>(3) 卸下螺丝，抽出主板</h5><h5 id="4-查看-SD-卡槽上的字样以确定版本"><a href="#4-查看-SD-卡槽上的字样以确定版本" class="headerlink" title="(4) 查看 SD 卡槽上的字样以确定版本"></a>(4) 查看 SD 卡槽上的字样以确定版本</h5><p>标 v1.3 为新版，未标为旧版</p><p><img src="https://pic.imgdb.cn/item/6698d159d9c307b7e97f7844.webp" alt="Pic04-图片截自Bilibili @在下莫老师"></p><h5 id="5-根据版本寻找短接点"><a href="#5-根据版本寻找短接点" class="headerlink" title="(5) 根据版本寻找短接点"></a>(5) 根据版本寻找短接点</h5><p><img src="https://pic.imgdb.cn/item/6698d1ced9c307b7e97ffbe5.webp" alt="Pic05-图片截自Bilibili @在下莫老师"></p><p><img src="https://pic.imgdb.cn/item/6698d1ced9c307b7e97ffc0b.webp" alt="Pic06-图片截自恩山无线论坛 @mysony"></p><h5 id="6-将-USB-公对公数据线的一头连接至玩客云主板上靠近-HDMI-接口的-USB-口上，另一头接在电脑上"><a href="#6-将-USB-公对公数据线的一头连接至玩客云主板上靠近-HDMI-接口的-USB-口上，另一头接在电脑上" class="headerlink" title="(6) 将 USB 公对公数据线的一头连接至玩客云主板上靠近 HDMI 接口的 USB 口上，另一头接在电脑上"></a>(6) 将 USB 公对公数据线的一头连接至玩客云主板上靠近 HDMI 接口的 USB 口上，另一头接在电脑上</h5><p><img src="https://pic.imgdb.cn/item/6698d1ced9c307b7e97ffc25.webp" alt="Pic07-图片截自Bilibili @在下莫老师"></p><h5 id="7-接下来用一只手拿着电源线准备插入到玩客云"><a href="#7-接下来用一只手拿着电源线准备插入到玩客云" class="headerlink" title="(7) 接下来用一只手拿着电源线准备插入到玩客云"></a>(7) 接下来用一只手拿着电源线准备插入到玩客云</h5><p>另一只手拿着镊子触碰玩客云的两个短接点进行短接</p><h5 id="8-在短接后接入电源-短接先不断开直到-3"><a href="#8-在短接后接入电源-短接先不断开直到-3" class="headerlink" title="(8) 在短接后接入电源 [短接先不断开直到 3%]"></a>(8) 在短接后接入电源 [短接先不断开直到 3%]</h5><p>(注意：顺序非常重要，先接电源后短接在烧录工具处是没反应的)</p><p>这时如果你的操作无误，那么烧录工具就能识别到你的玩客云并自动开始烧录</p><p>(特别注意：如果你不想烧录失败，在接入电源后镊子不要马上拿走，务必等到烧录工具进度超过 3% 再拿开)</p><h4 id="第二种：免拆线刷"><a href="#第二种：免拆线刷" class="headerlink" title="第二种：免拆线刷"></a>第二种：免拆线刷</h4><h5 id="1-将-USB-公对公数据线的一头连接至玩客云主板上靠近-HDMI-接口的-USB-口上，另一头接在电脑上"><a href="#1-将-USB-公对公数据线的一头连接至玩客云主板上靠近-HDMI-接口的-USB-口上，另一头接在电脑上" class="headerlink" title="(1) 将 USB 公对公数据线的一头连接至玩客云主板上靠近 HDMI 接口的 USB 口上，另一头接在电脑上"></a>(1) 将 USB 公对公数据线的一头连接至玩客云主板上靠近 HDMI 接口的 USB 口上，另一头接在电脑上</h5><p><img src="https://pic.imgdb.cn/item/6698d1cfd9c307b7e97ffc53.webp" alt="Pic08"></p><h5 id="2-接下来用一只手拿着电源，另一只手拿着卡针或卡针类的东西插在-reset-按钮上，另一只手准备插电源"><a href="#2-接下来用一只手拿着电源，另一只手拿着卡针或卡针类的东西插在-reset-按钮上，另一只手准备插电源" class="headerlink" title="(2) 接下来用一只手拿着电源，另一只手拿着卡针或卡针类的东西插在 reset 按钮上，另一只手准备插电源"></a>(2) 接下来用一只手拿着电源，另一只手拿着卡针或卡针类的东西插在 reset 按钮上，另一只手准备插电源</h5><p><img src="https://pic.imgdb.cn/item/6698d1cfd9c307b7e97ffc89.webp" alt="Pic09"></p><h5 id="3-在接入电源的同时按下-reset-按钮-按住先不断开直到-3"><a href="#3-在接入电源的同时按下-reset-按钮-按住先不断开直到-3" class="headerlink" title="(3) 在接入电源的同时按下 reset 按钮 [按住先不断开直到 3%]"></a>(3) 在接入电源的同时按下 reset 按钮 [按住先不断开直到 3%]</h5><p>(注意：如果你不想你的烧录工具报错或识别不到你的设备，那么请务必是同时按住)</p><p>这时如果你的操作无误，那么烧录工具就能识别到你的玩客云并自动开始烧录</p><p>(特别注意：如果你不想烧录失败，在接入电源后请一直按着 reset 按钮，务必等到烧录工具进度超过 3% 再拿开)</p><h3 id="7、烧录完成后"><a href="#7、烧录完成后" class="headerlink" title="7、烧录完成后"></a>7、烧录完成后</h3><h5 id="1-拔下电源"><a href="#1-拔下电源" class="headerlink" title="(1) 拔下电源"></a>(1) 拔下电源</h5><h5 id="2-拔下-USB-公对公数据线"><a href="#2-拔下-USB-公对公数据线" class="headerlink" title="(2) 拔下 USB 公对公数据线"></a>(2) 拔下 USB 公对公数据线</h5><h5 id="3-如果你在步骤-6-中用的是第一种线刷方法，那么你在这时已经可以把主板装回到盒子中了"><a href="#3-如果你在步骤-6-中用的是第一种线刷方法，那么你在这时已经可以把主板装回到盒子中了" class="headerlink" title="(3) 如果你在步骤 6 中用的是第一种线刷方法，那么你在这时已经可以把主板装回到盒子中了"></a>(3) 如果你在步骤 6 中用的是第一种线刷方法，那么你在这时已经可以把主板装回到盒子中了</h5><h2 id="二、安装-CasaOS"><a href="#二、安装-CasaOS" class="headerlink" title="二、安装 CasaOS"></a>二、安装 CasaOS</h2><h3 id="1、玩客云部分"><a href="#1、玩客云部分" class="headerlink" title="1、玩客云部分"></a>1、玩客云部分</h3><h5 id="1-网线一头接入路由器，另一头接在玩客云的-LAN-口上"><a href="#1-网线一头接入路由器，另一头接在玩客云的-LAN-口上" class="headerlink" title="(1) 网线一头接入路由器，另一头接在玩客云的 LAN 口上"></a>(1) 网线一头接入路由器，另一头接在玩客云的 LAN 口上</h5><h5 id="2-给玩客云接入电源"><a href="#2-给玩客云接入电源" class="headerlink" title="(2) 给玩客云接入电源"></a>(2) 给玩客云接入电源</h5><p>(注意：此时先不要接入你的硬盘，连接失败是小事，数据损坏就是大事了)</p><h3 id="2、电脑部分"><a href="#2、电脑部分" class="headerlink" title="2、电脑部分"></a>2、电脑部分</h3><h5 id="1-下载我提供的-MobaXterm-SSH-远程登录工具或自行下载"><a href="#1-下载我提供的-MobaXterm-SSH-远程登录工具或自行下载" class="headerlink" title="(1) 下载我提供的 MobaXterm SSH 远程登录工具或自行下载"></a>(1) 下载我提供的 MobaXterm SSH 远程登录工具或自行下载</h5><div class='spoiler collapsed'>    <div class='spoiler-title'>        123云盘:MobaXterm_v22.1    </div>    <div class='spoiler-content'>        <p><a href="https://www.123pan.com/s/3l4rVv-pARtd.html">https://www.123pan.com/s/3l4rVv-pARtd.html</a></p><p>提取码：<code>bUZ1</code></p>    </div></div><h5 id="2-登录路由器管理后台"><a href="#2-登录路由器管理后台" class="headerlink" title="(2) 登录路由器管理后台"></a>(2) 登录路由器管理后台</h5><p>(各路由器管理系统不同，具体进入方法请自行百度)</p><p>查找 onecloud 设备的 ip 地址</p><p><img src="https://pic.imgdb.cn/item/6698d20bd9c307b7e980426a.webp" alt="Pic10"></p><h5 id="3-运行-MobaXterm-SSH-远程登录工具，按照图示填"><a href="#3-运行-MobaXterm-SSH-远程登录工具，按照图示填" class="headerlink" title="(3) 运行 MobaXterm SSH 远程登录工具，按照图示填"></a>(3) 运行 MobaXterm SSH 远程登录工具，按照图示填</h5><p><img src="https://pic.imgdb.cn/item/6698d20bd9c307b7e980428d.webp" alt="Pic11"></p><p>回车，等待一会</p><p>然后软件会要求你输入密码</p><p>这里的密码默认为<code>1234</code></p><p>(注意：输入密码不会显示，输完就行了)</p><p>然后回车就能进入 Armbian 系统了</p><p>首次进入会提示你更改默认登录密码</p><p>输入新密码后回车，会让你再次输入一遍以确认密码</p><p>然后会询问你是否创建一个新用户</p><p>这里直接 <code>Ctrl+C</code> 跳过就行了</p><h5 id="4-因为我们刷的-Armbian-的底层包的默认时区为-0000-所以我们输入"><a href="#4-因为我们刷的-Armbian-的底层包的默认时区为-0000-所以我们输入" class="headerlink" title="(4) 因为我们刷的 Armbian 的底层包的默认时区为 + 0000 所以我们输入"></a>(4) 因为我们刷的 Armbian 的底层包的默认时区为 + 0000 所以我们输入</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br></pre></td></tr></table></figure><p>来更改时区</p><p>然后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -R</span><br></pre></td></tr></table></figure><p>检查一次时间，确定无误后即可安装 CasaOS 了</p><h5 id="5-输入"><a href="#5-输入" class="headerlink" title="(5) 输入"></a>(5) 输入</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.casaos.io | bash</span><br></pre></td></tr></table></figure><p>来安装 CasaOS</p><p>如果你的网络不好，可以执行这个国内源代码试试</p><p>(注意：使用了国内源的一键安装以后是无法自动升级 casaos 系统的)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL cn-get.casaos.io | bash</span><br></pre></td></tr></table></figure><p>然后我们只需要耐心等待安装完成就行了</p><h5 id="6-安装完成后直接在浏览器输入-onecloud-的-ip-地址就可以进入-CasaOS-了"><a href="#6-安装完成后直接在浏览器输入-onecloud-的-ip-地址就可以进入-CasaOS-了" class="headerlink" title="(6) 安装完成后直接在浏览器输入 onecloud 的 ip 地址就可以进入 CasaOS 了"></a>(6) 安装完成后直接在浏览器输入 onecloud 的 ip 地址就可以进入 CasaOS 了</h5><p>(注意：必须连接到家中的网络才可访问 CasaOS)</p><h5 id="7-进入-CasaOS-后"><a href="#7-进入-CasaOS-后" class="headerlink" title="(7) 进入 CasaOS 后"></a>(7) 进入 CasaOS 后</h5><p>会让你创建一个账号</p><p>推荐填写 <code>root</code></p><p>密码就写你在 armbian 的默认登录密码</p><p>然后按照提示设置就可以完成设置 CasaOS 了</p><p>这时候你就可以接上自己的硬盘了</p><h2 id="三、一些问题"><a href="#三、一些问题" class="headerlink" title="三、一些问题"></a>三、一些问题</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>        特别注意：硬盘    </div>    <div class='spoiler-content'>        <p>因为 CasaOS 的关机或重启对于硬盘来说就像突然断电了一样</p><p>(ps: 机械最好一直不断电，每次断电对于磁头和盘片来说就是一次关于默契的生死考验)</p><p>如果你不想像我一样废了个硬盘的话，你最好在 CasaOS 上使用关机和重启功能前务必要先把硬盘弹出，再进行操作。</p>    </div></div><div class='spoiler collapsed'>    <div class='spoiler-title'>        关于UPS    </div>    <div class='spoiler-content'>        <p>为防止突然断电给硬盘带来的损害</p><p>最好再购置一个 ups</p><p>它可以在突然断电时自动切换为 ups 作为备用电源来使用</p><p>通常好的 ups 价格都要几百</p><p>能让普通台式机坚持一个小时以上的价格都要六七千往上了</p><p>但是玩客云是 12 V 1.5 A 就够了</p><p>这里给一个参考价格，也就是我自己给玩客云用的 ups：25.24 元</p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Armbian </tag>
            
            <tag> 玩客云 </tag>
            
            <tag> CasaOS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
